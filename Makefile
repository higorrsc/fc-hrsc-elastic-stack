# ==============================================================================
# CONFIGURA√á√ïES GERAIS
# ==============================================================================

# Define o "alvo" (goal) padr√£o para 'help'. Se 'make' for executado sem argumentos,
# ele mostrar√° a ajuda em vez de executar o primeiro alvo do arquivo.
.DEFAULT_GOAL := help

# Garante que o Makefile pare imediatamente se um comando falhar.
# -o errexit: Aborta se um comando falhar.
# -o pipefail: Considera falha em um pipe se qualquer parte dele falhar.
SHELL := /bin/bash
.SHELLFLAGS := -o errexit -o pipefail -c

# Declara alvos que n√£o s√£o arquivos. Isso evita conflitos com nomes de arquivos
# e melhora o desempenho.
.PHONY: help elastic-up elastic-down app-build app-up app-down

# Vari√°veis para os comandos do Docker Compose, evitando repeti√ß√£o.
ELASTIC_COMPOSE = docker-compose
APP_COMPOSE = docker-compose -f app/docker-compose.yml


# ==============================================================================
# ALVOS DO PROJETO
# ==============================================================================

elastic-up: ## üê≥ Elastic: Sobe os cont√™ineres do Elasticsearch em background
	@echo "=> Subindo cont√™ineres do Elastic..."
	@$(ELASTIC_COMPOSE) up -d

elastic-down: ## üê≥ Elastic: Para e remove os cont√™ineres do Elasticsearch
	@echo "=> Parando cont√™ineres do Elastic..."
	@$(ELASTIC_COMPOSE) down

app-build: ## üöÄ App: Constr√≥i (ou reconstr√≥i) e sobe os cont√™ineres da aplica√ß√£o
	@echo "=> Construindo e subindo a aplica√ß√£o..."
	@$(APP_COMPOSE) up -d --build

app-up: ## üöÄ App: Sobe os cont√™ineres da aplica√ß√£o em background
	@echo "=> Subindo a aplica√ß√£o..."
	@$(APP_COMPOSE) up -d

app-down: ## üöÄ App: Para e remove os cont√™ineres da aplica√ß√£o
	@echo "=> Parando a aplica√ß√£o..."
	@$(APP_COMPOSE) down


# ==============================================================================
# COMANDO DE AJUDA (HELP)
# ==============================================================================

help: ## ‚ú® Exibe esta mensagem de ajuda
	@echo "Uso: make [alvo]"
	@echo ""
	@echo "Alvos dispon√≠veis:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | \
		sort | \
		awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2}'
